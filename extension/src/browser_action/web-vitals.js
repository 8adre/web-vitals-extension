const e=(e,t,n,i,s)=>()=>{n&&(n.takeRecords().map(i),n.disconnect()),"number"==typeof t.value&&(t.isFinal||(t.isFinal=!0,s&&s(t)),e(t))},t=(e,t)=>{try{if(PerformanceObserver.supportedEntryTypes.includes(e)){const n=new PerformanceObserver(e=>e.getEntries().map(t));return n.observe({type:e,buffered:!0}),n}}catch(e){}},n=e=>t=>{const n={value:null,entries:[],isFinal:!1};return new Promise(i=>e(n,i,t))},i=new Promise(e=>["visibilitychange","unload"].map(t=>((e,t)=>{const n=i=>{"hidden"===document.visibilityState&&(removeEventListener(e,n,!0),t(i))};addEventListener(e,n,!0)})(t,e))),s=n((n,s,r)=>{n.value=0;const a=e=>{e.hadRecentInput||(n.value+=e.value,n.entries.push(e),r&&r(n))},o=t("layout-shift",a),u=e(s,n,o,a,r);i.then(u)});let r="hidden"===document.visibilityState?0:1/0;i.then(e=>r=e.timeStamp);const a=()=>r,o=n((n,i,s)=>{const r=e=>{"first-contentful-paint"===e.name&&e.startTime<a()&&(n.value=e.startTime,n.entries.push(e),u())},o=t("paint",r),u=e(i,n,o,r,s)}),u=n((n,s,r)=>{const a=e=>{n.value=e.processingStart-e.startTime,n.entries.push(e),u()},o=t("first-input",a),u=e(s,n,o,a,r);i.then(u),o||window.perfMetrics&&window.perfMetrics.onFirstInputDelay&&window.perfMetrics.onFirstInputDelay((e,t)=>{n.value=e,n.event=t,u()})}),c=new Promise(e=>["scroll","keydown","pointerdown"].map(t=>{addEventListener(t,e,{once:!0,passive:!0,capture:!0})})),l=n((n,s,r)=>{let o=!0;const u=e=>{o&&a()<e.startTime?p():(n.value=e.startTime,n.entries.push(e),r&&r(n),o=!1)},l=t("largest-contentful-paint",u),p=e(s,n,l,u,r);i.then(p),c.then(p)});export{s as getCLS,o as getFCP,u as getFID,l as getLCP};
